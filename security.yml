---
- hosts: all
  vars_files:
    - vars.yml
    - private/vars.yml
  tasks:
  - set_fact:
      hostname: '{{ ansible_nodename.split(".")[0] }}'
      fqdn: '{{ ansible_nodename.split(".")[0] }}.{{ server_domain }}'
  - apt:
      update_cache: yes
  - package:
      name: "{{ item }}"
      state: latest
    with_items:
    - secure-delete
    - scrub
    - libpam-yubico
    - sudo
    - openssh-server
    - iptables
  - lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^AllowUsers'
      line: 'AllowUsers root'
  - lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^PasswordAuthentication'
      line: 'PasswordAuthentication no'
  - lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^ChallengeResponseAuthentication'
      line: 'ChallengeResponseAuthentication yes'
  - lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^AuthenticationMethods'
      line: 'AuthenticationMethods publickey,keyboard-interactive:pam'
  - lineinfile:
      path: /etc/pam.d/common-auth
      regexp: 'pam_yubico'
      insertbefore: 'pam_unix'
      line: 'auth requisite pam_yubico.so mode=client try_first_pass id={{ yubico_id }} key={{ yubico_key }}'
  - template:
      src: firewall.j2
      dest: /etc/network/if-up.d/firewall
      mode: 0755
  - shell: /etc/network/if-up.d/firewall
  - lineinfile:
      path: /etc/sudoers
      regexp: '^%sudo'
      line: '%sudo ALL=(ALL) NOPASSWD:ALL'
  - service:
      name: ssh
      state: restarted
  - file:
      path: /root/.ssh
      state: directory
  - file:
      path: /root/.yubico
      state: directory
  - template:
      src: private/authorized_keys
      dest: /root/.ssh/authorized_keys
  - template:
      src: private/authorized_yubikeys
      dest: /root/.yubico/authorized_yubikeys
  - copy:
      content: |
        #!/bin/sh
        exec /usr/bin/scrub -X /home/scrub | /usr/bin/logger -p security.info -t scrub

      dest: /etc/cron.daily/scrub
      owner: root
      group: root
      mode: 0755
      backup: yes
